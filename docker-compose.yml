services:
  # Сервис базы данных PostgreSQL
  db:
    image: postgres:15  # Используем официальный образ PostgreSQL версии 15
    container_name: vue_mny_db  # Уникальное имя контейнера
    environment:  # Переменные окружения для инициализации БД
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=finance_db
    ports:  # Проброс портов: локальный_порт:порт_в_контейнере
      - "5432:5432"
    volumes:  # Монтирование тома для сохранения данных между перезапусками
      - postgres_data:/var/lib/postgresql/data
    healthcheck:  # Проверка здоровья контейнера
      test: ["CMD-SHELL", "pg_isready -U postgres"]  # Команда для проверки готовности БД
      interval: 5s  # Интервал между проверками
      timeout: 5s   # Таймаут ожидания ответа
      retries: 5    # Количество попыток
    networks:
      - app-network

  # Frontend сервис
  frontend:
    build: ./frontend
    container_name: vue_mny_frontend
    ports:
      - "80:80"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    environment:
      - VITE_API_URL=http://localhost:8000/api
    networks:
      - app-network

  # Сервис backend приложения
  backend:
    build: ./backend
    container_name: vue_mny_backend
    command: sh -c "chmod +x /app/*.sh && ./start.sh"
    volumes:  # Монтирование локальной директории для разработки
      - ./backend:/app
    ports:  # Проброс портов для доступа к API
      - "8000:8000"
    environment:  # Переменные окружения для подключения к БД
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/finance_db
    depends_on:  # Зависимость от сервиса БД
      db:
        condition: service_healthy  # Ждем, пока БД будет готова
    networks:
      - app-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: vue_mny_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - db
    networks:
      - app-network

volumes:
  postgres_data:  # Том для данных PostgreSQL 

networks:
  app-network:
    driver: bridge 